spring.application.name=BankClient
server.port=8081

## MySQL
# Datasource connection
spring.datasource.platform=mysql
spring.datasource.initialization-mode=always
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
#spring.datasource.username=root
#spring.datasource.password=1234
# Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true



spring.rabbitmq.host:rabbitmq
spring.rabbitmq.port:5672
spring.rabbitmq.password:guest
spring.rabbitmq.username:guest

#queue to send messages from here
spring.rabbitmq.exchange:client.exchange
spring.rabbitmq.queue:client.queue
spring.rabbitmq.routingkey:client.routingkey



logging.level.com.bank.client.BankClient=INFO

#NETWORK CREATION TO COMUNICATE EACH MICROSERVICES
#docker network create myapp_net

#RabitMQ server
#docker pull rabbitmq:3-management
#docker run -d --network myapp_net --hostname rabbitmqhost --name rabbitmq -p 15672:15672 -p 5672:5672 rabbitmq:3-management

#CREATION AND RUN OF CLIENT MICRO
#docker build -t bankclient-1:spring-docker .
#docker run --network myapp_net --name bankclient -p 8081:8081 bankclient-1:spring-docker .

#docker-compose build --no-cache
